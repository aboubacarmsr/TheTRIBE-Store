{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\My Office\\\\Projects\\\\thetribe-store\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport storage from \"local-storage-fallback\";\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\nconst GlobalStyle = createGlobalStyle`\nbody {\n  background-color: ${props => props.theme.mode === \"dark\" ? \"#111\" : \"#EEE\"};\n  color: ${props => props.theme.mode === \"dark\" ? \"#EEE\" : \"#111\"};\n}\n`; //\n\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport Header from './components/header/header.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const [theme, setTheme] = useState(getInitialTheme);\n    useEffect(() => {\n      storage.setItem(\"theme\", JSON.stringify(theme));\n    }, [theme]);\n\n    function getInitialTheme() {\n      const savedTheme = storage.getItem(\"theme\");\n      return savedTheme ? JSON.parse(savedTheme) : {\n        mode: \"light\"\n      };\n    } //\n\n\n    const {\n      setCurrentUser\n    } = this.props; // On cree un utilisateur et on snapshot ses informations dans notre state\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GlobalStyle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setTheme(theme.mode === \"dark\" ? {\n        mode: \"light\"\n      } : {\n        mode: \"dark\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Toggle Mode\"), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUpPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n} //Recuperer le current user du reducer\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n}); //Appel Ã  la fonction redux pour set l'utilisateur actuel\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/DELL/My Office/Projects/thetribe-store/src/App.js"],"names":["React","useState","useEffect","storage","ThemeProvider","createGlobalStyle","GlobalStyle","props","theme","mode","Switch","Route","Redirect","connect","createStructuredSelector","HomePage","ShopPage","SignInAndSignUpPage","CheckoutPage","Header","auth","createUserProfileDocument","setCurrentUser","selectCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","setTheme","getInitialTheme","setItem","JSON","stringify","savedTheme","getItem","parse","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport storage from \"local-storage-fallback\";\nimport { ThemeProvider, createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\nbody {\n  background-color: ${props => (props.theme.mode === \"dark\" ? \"#111\" : \"#EEE\")};\n  color: ${props => (props.theme.mode === \"dark\" ? \"#EEE\" : \"#111\")};\n}\n`;\n\n//\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport './App.css';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport CheckoutPage from './pages/checkout/checkout.component';\n\nimport Header from './components/header/header.component';\n\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    const [theme, setTheme] = useState(getInitialTheme);\n    useEffect(() => {\n    storage.setItem(\"theme\", JSON.stringify(theme));\n    }, [theme]);\n\n    function getInitialTheme() {\n    const savedTheme = storage.getItem(\"theme\");\n\n    return savedTheme ? JSON.parse(savedTheme) : { mode: \"light\" };\n    }\n    //\n    const { setCurrentUser } = this.props;\n    // On cree un utilisateur et on snapshot ses informations dans notre state\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <div>\n          <Header />\n          <button onClick={() => setTheme(theme.mode === \"dark\" ? { mode: \"light\" } : { mode: \"dark\" })}>\n            Toggle Mode\n          </button>\n          <Switch>\n            <Route exact path='/' component={HomePage} />\n            <Route path='/shop' component={ShopPage} />\n            <Route exact path='/checkout' component={CheckoutPage} />\n            <Route\n              exact\n              path='/signin'\n              render={() =>\n                this.props.currentUser ? (\n                  <Redirect to='/' />\n                ) : (\n                  <SignInAndSignUpPage />\n                )\n              }\n            />\n          </Switch>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n//Recuperer le current user du reducer\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n//Appel Ã  la fonction redux pour set l'utilisateur actuel\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}